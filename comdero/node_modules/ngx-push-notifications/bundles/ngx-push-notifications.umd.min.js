!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@angular/core"),require("rxjs")):"function"==typeof define&&define.amd?define("ngx-push-notifications",["exports","@angular/core","rxjs"],t):t(e["ngx-push-notifications"]={},e.ng.core,e.rxjs)}(this,function(e,t,n){"use strict";var i=function r(){this.dir="auto",this.lang="en-US",this.renotify=!1,this.sticky=!1,this.noscreen=!1,this.silent=!0},o=function(){function e(){}return e.prototype.checkCompatibility=function(){return!!("Notification"in window)},e.prototype.requestPermission=function(){return n.from(Notification.requestPermission())},e.prototype.isPermissionGranted=function(e){return"granted"===e},e.prototype.create=function(o,r){var s=this;return new n.Observable(function(i){if(!s.checkCompatibility()){var e="Notifications are not available in this browser.";console.error(e),i.error(e),i.complete()}s.requestPermission().subscribe(function(e){if(s.isPermissionGranted(e)){var t=new Notification(o,r);t.onshow=function(e){i.next({notification:t,event:e})},t.onclick=function(e){i.next({notification:t,event:e})},t.onerror=function(e){i.error({notification:t,event:e})},t.onclose=function(e){i.next({notification:t,event:e})}}else{var n="The user hasn't granted you permission to send push notifications";console.error(n),i.error(n),i.complete()}})})},e.decorators=[{type:t.Injectable}],e.ctorParameters=function(){return[]},e}();e.PushNotificationOptions=i,e.PushNotificationService=o,Object.defineProperty(e,"__esModule",{value:!0})});
//# sourceMappingURL=ngx-push-notifications.umd.min.js.map