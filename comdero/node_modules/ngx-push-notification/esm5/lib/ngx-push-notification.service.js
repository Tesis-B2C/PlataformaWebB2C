/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Injectable } from '@angular/core';
import { Observable } from 'rxjs';
import * as webNotification from 'simple-web-notification';
import * as i0 from "@angular/core";
var NgxPushNotificationService = /** @class */ (function () {
    function NgxPushNotificationService() {
    }
    /**
     * @param {?} options
     * @return {?}
     */
    NgxPushNotificationService.prototype.showNotification = /**
     * @param {?} options
     * @return {?}
     */
    function (options) {
        /** @type {?} */
        var observable = new Observable((/**
         * @param {?} observer
         * @return {?}
         */
        function (observer) {
            webNotification.showNotification(options.title, {
                body: options.body,
                icon: options.icon,
                onClick: (/**
                 * @return {?}
                 */
                function onNotificationClicked() {
                    observer.next({
                        type: 'click'
                    });
                }),
                autoClose: 4000
            }, (/**
             * @param {?} error
             * @param {?} hide
             * @return {?}
             */
            function onShow(error, hide) {
                if (error) {
                    observer.error(error.message);
                }
                else {
                    observer.next({
                        type: 'show'
                    });
                    setTimeout((/**
                     * @return {?}
                     */
                    function hideNotification() {
                        observer.next({
                            type: 'close'
                        });
                        hide();
                    }), 4000);
                }
            }));
        }));
        return observable;
    };
    NgxPushNotificationService.decorators = [
        { type: Injectable, args: [{
                    providedIn: 'root'
                },] }
    ];
    /** @nocollapse */ NgxPushNotificationService.ngInjectableDef = i0.ɵɵdefineInjectable({ factory: function NgxPushNotificationService_Factory() { return new NgxPushNotificationService(); }, token: NgxPushNotificationService, providedIn: "root" });
    return NgxPushNotificationService;
}());
export { NgxPushNotificationService };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd4LXB1c2gtbm90aWZpY2F0aW9uLnNlcnZpY2UuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZ3gtcHVzaC1ub3RpZmljYXRpb24vIiwic291cmNlcyI6WyJsaWIvbmd4LXB1c2gtbm90aWZpY2F0aW9uLnNlcnZpY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDM0MsT0FBTyxFQUFFLFVBQVUsRUFBWSxNQUFNLE1BQU0sQ0FBQztBQUs1QyxPQUFPLEtBQUssZUFBZSxNQUFNLHlCQUF5QixDQUFDOztBQUUzRDtJQUFBO0tBbUNDOzs7OztJQS9CQyxxREFBZ0I7Ozs7SUFBaEIsVUFBaUIsT0FBZ0I7O1lBQ3pCLFVBQVUsR0FBRyxJQUFJLFVBQVU7Ozs7UUFBQyxVQUFDLFFBQXdCO1lBQ3pELGVBQWUsQ0FBQyxnQkFBZ0IsQ0FBQyxPQUFPLENBQUMsS0FBSyxFQUFFO2dCQUM5QyxJQUFJLEVBQUUsT0FBTyxDQUFDLElBQUk7Z0JBQ2xCLElBQUksRUFBRSxPQUFPLENBQUMsSUFBSTtnQkFDbEIsT0FBTzs7O2dCQUFFLFNBQVMscUJBQXFCO29CQUNyQyxRQUFRLENBQUMsSUFBSSxDQUFDO3dCQUNaLElBQUksRUFBRSxPQUFPO3FCQUNkLENBQUMsQ0FBQztnQkFDTCxDQUFDLENBQUE7Z0JBQ0QsU0FBUyxFQUFFLElBQUk7YUFDaEI7Ozs7O1lBQUUsU0FBUyxNQUFNLENBQUMsS0FBSyxFQUFFLElBQUk7Z0JBQzVCLElBQUksS0FBSyxFQUFFO29CQUNULFFBQVEsQ0FBQyxLQUFLLENBQUMsS0FBSyxDQUFDLE9BQU8sQ0FBQyxDQUFDO2lCQUMvQjtxQkFBTTtvQkFDTCxRQUFRLENBQUMsSUFBSSxDQUFDO3dCQUNaLElBQUksRUFBRSxNQUFNO3FCQUNiLENBQUMsQ0FBQztvQkFFSCxVQUFVOzs7b0JBQUMsU0FBUyxnQkFBZ0I7d0JBQ2xDLFFBQVEsQ0FBQyxJQUFJLENBQUM7NEJBQ1osSUFBSSxFQUFFLE9BQU87eUJBQ2QsQ0FBQyxDQUFDO3dCQUNILElBQUksRUFBRSxDQUFDO29CQUNULENBQUMsR0FBRSxJQUFJLENBQUMsQ0FBQztpQkFDVjtZQUNILENBQUMsRUFBQyxDQUFDO1FBQ0wsQ0FBQyxFQUFDO1FBRUYsT0FBTyxVQUFVLENBQUM7SUFDcEIsQ0FBQzs7Z0JBbENGLFVBQVUsU0FBQztvQkFDVixVQUFVLEVBQUUsTUFBTTtpQkFDbkI7OztxQ0FWRDtDQTJDQyxBQW5DRCxJQW1DQztTQWhDWSwwQkFBMEIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBPYnNlcnZhYmxlLCBPYnNlcnZlciB9IGZyb20gJ3J4anMnO1xuXG5pbXBvcnQgeyBPcHRpb25zIH0gZnJvbSAnLi9vcHRpb25zJztcbmltcG9ydCB7IFR5cGUgfSBmcm9tICcuL3R5cGUnO1xuXG5pbXBvcnQgKiBhcyB3ZWJOb3RpZmljYXRpb24gZnJvbSAnc2ltcGxlLXdlYi1ub3RpZmljYXRpb24nO1xuXG5ASW5qZWN0YWJsZSh7XG4gIHByb3ZpZGVkSW46ICdyb290J1xufSlcbmV4cG9ydCBjbGFzcyBOZ3hQdXNoTm90aWZpY2F0aW9uU2VydmljZSB7XG4gIHNob3dOb3RpZmljYXRpb24ob3B0aW9uczogT3B0aW9ucyk6IE9ic2VydmFibGU8VHlwZT4ge1xuICAgIGNvbnN0IG9ic2VydmFibGUgPSBuZXcgT2JzZXJ2YWJsZSgob2JzZXJ2ZXI6IE9ic2VydmVyPFR5cGU+KSA9PiB7XG4gICAgICB3ZWJOb3RpZmljYXRpb24uc2hvd05vdGlmaWNhdGlvbihvcHRpb25zLnRpdGxlLCB7XG4gICAgICAgIGJvZHk6IG9wdGlvbnMuYm9keSxcbiAgICAgICAgaWNvbjogb3B0aW9ucy5pY29uLFxuICAgICAgICBvbkNsaWNrOiBmdW5jdGlvbiBvbk5vdGlmaWNhdGlvbkNsaWNrZWQoKSB7XG4gICAgICAgICAgb2JzZXJ2ZXIubmV4dCh7XG4gICAgICAgICAgICB0eXBlOiAnY2xpY2snXG4gICAgICAgICAgfSk7XG4gICAgICAgIH0sXG4gICAgICAgIGF1dG9DbG9zZTogNDAwMFxuICAgICAgfSwgZnVuY3Rpb24gb25TaG93KGVycm9yLCBoaWRlKSB7XG4gICAgICAgIGlmIChlcnJvcikge1xuICAgICAgICAgIG9ic2VydmVyLmVycm9yKGVycm9yLm1lc3NhZ2UpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIG9ic2VydmVyLm5leHQoe1xuICAgICAgICAgICAgdHlwZTogJ3Nob3cnXG4gICAgICAgICAgfSk7XG5cbiAgICAgICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uIGhpZGVOb3RpZmljYXRpb24oKSB7XG4gICAgICAgICAgICBvYnNlcnZlci5uZXh0KHtcbiAgICAgICAgICAgICAgdHlwZTogJ2Nsb3NlJ1xuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICBoaWRlKCk7XG4gICAgICAgICAgfSwgNDAwMCk7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgIH0pO1xuXG4gICAgcmV0dXJuIG9ic2VydmFibGU7XG4gIH1cbn1cbiJdfQ==