{"version":3,"sources":["ng://ngx-push-notification/lib/ngx-push-notification.service.ts"],"names":["NgxPushNotificationService","prototype","showNotification","options","Observable","observer","webNotification.showNotification","title","body","icon","onClick","next","type","autoClose","error","hide","message","setTimeout","Injectable","args","providedIn"],"mappings":"0ZAAA,IAAAA,EAAA,WAQA,SAAAA,YAIEA,EAAAC,UAAAC,iBAAA,SAAiBC,GA6Bf,OA5BmB,IAAIC,EAAAA,YAAU,SAAEC,GACjCC,EAAAA,iBAAiCH,EAAQI,MAAO,CAC9CC,KAAML,EAAQK,KACdC,KAAMN,EAAQM,KACdC,QAAO,WACLL,EAASM,KAAK,CACZC,KAAM,WAGVC,UAAW,MACZ,SAAkBC,EAAOC,GACpBD,EACFT,EAASS,MAAMA,EAAME,UAErBX,EAASM,KAAK,CACZC,KAAM,SAGRK,YAAU,WACRZ,EAASM,KAAK,CACZC,KAAM,UAERG,MACC,iCA5BZG,EAAAA,WAAUC,KAAA,CAAC,CACVC,WAAY,kHATd","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Observable, Observer } from 'rxjs';\n\nimport { Options } from './options';\nimport { Type } from './type';\n\nimport * as webNotification from 'simple-web-notification';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgxPushNotificationService {\n  showNotification(options: Options): Observable<Type> {\n    const observable = new Observable((observer: Observer<Type>) => {\n      webNotification.showNotification(options.title, {\n        body: options.body,\n        icon: options.icon,\n        onClick: function onNotificationClicked() {\n          observer.next({\n            type: 'click'\n          });\n        },\n        autoClose: 4000\n      }, function onShow(error, hide) {\n        if (error) {\n          observer.error(error.message);\n        } else {\n          observer.next({\n            type: 'show'\n          });\n\n          setTimeout(function hideNotification() {\n            observer.next({\n              type: 'close'\n            });\n            hide();\n          }, 4000);\n        }\n      });\n    });\n\n    return observable;\n  }\n}\n"]}